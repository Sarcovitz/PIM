@page "/Auth/Login"

@using Blazored.LocalStorage
@using PIM.Auth;
@using PIM.Shared.Components
@using PimModels.RequestModels

@inject ILocalStorageService _localStorage;
@inject NavigationManager _navManager;
@inject AuthStateProvider _authProvider;

@if(!string.IsNullOrWhiteSpace(_authProvider.Message))
{
    <h1>@_authProvider.Message</h1>
}

<div class="formHolder position-absolute top-50 start-50 translate-middle">
    <EditForm Model="@loginUser" OnValidSubmit="@SignIn">
            <h3>Login</h3>

            <div class="formFields">
                <div class="inputHolder">
                    <label for="username">Username:</label>
                    <input type="text" id="username" @bind-value="loginUser.Username" /> <br />
                </div>
                <div class="inputHolder">
                    <label for="password">Password:</label>
                    <input type="password"  id="password" @bind-value="loginUser.Password" /><br />
                </div>
            </div>
            <div class="inputHolder">
                <input type="submit" value="Sign In"/>
            <br />
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
    </EditForm>
</div>

@code 
{
    private LoginUser loginUser = new();
        
    protected override Task OnInitializedAsync() => Task.FromResult(_authProvider.Message = "");

    private async Task SignIn()
    {
        await _authProvider.LoginAsync(loginUser);
        if (_authProvider.Message != "") return;
        _navManager.NavigateTo("/"); 
    }
}
