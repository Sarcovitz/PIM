@page "/Catalog/List"

@using PIM.Data
@using PIM.Data.Services
@using PimModels.Models

@inject NavigationManager _navManager
@inject StateContainer _stateContainer
@inject CatalogService _catalogService


<h3>CatalogsPage</h3>
<a href="/Catalog/Create">ADD NEW CATALOG</a>

@if(catalogs == null) { <text> WAIT </text> }
else
{
    @if (catalogs.Count == 0) { _navManager.NavigateTo("/Catalog/Create"); }
    else
    {
        @foreach (var catalog in catalogs)
        {
            <div style="border: solid 2px black; display:flex;">
                <div>
                    Catalog Name: @catalog.Name <br>
                    Default currency: @catalog.DefaultCurrencyCode <br>
                    Owner: @catalog.CatalogUsers.First(x => x.Role == CatalogUserRole.Owner).User.Username <br>
                </div>
                <div>
                    @if(_stateContainer.Catalog != catalog) {<a @onclick="async () => await _stateContainer.SetCatalog(catalog)">SELECT</a>}
                    <a href="/Catalog/Delete/@catalog.Id">DELETE</a>
                    <a href="/Catalog/Manage/@catalog.Id">MANAGE</a>
                </div>
            </div>
        }
    }
}

@code {
    private List<Catalog>? catalogs = null;

    protected override async Task OnInitializedAsync()
    {
        catalogs = await _catalogService.GetAllAsync();
    }
}
